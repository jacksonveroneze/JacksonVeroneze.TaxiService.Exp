apiVersion: v1
kind: Namespace
metadata:
  name: taxi-service-exp-application

apiVersion: apps/v1
kind: Deployment
metadata:
  name: taxi-service-exp-deployment
  namespace: taxi-service-exp-application
  labels:
    app: taxi-service-exp-deployment
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
    prometheus.io.scheme: "http"
    prometheus.io/path: "/metrics"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: taxi-service-exp
  template:
    metadata:
      labels:
        app: taxi-service-exp
        version: "1.0"
    spec:
      containers:
        - name: taxi-service-exp
          image: jacksonveroneze/taxi-service-exp-service:0.0.4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: 256Mi
              cpu: 100m
            requests:
              memory: 256Mi
              cpu: 100m
          env:
            - name: APP_CONFIG_Cache__Type
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: APP_CONFIG_Cache__Type
            - name: APP_CONFIG_Cache__Endpoint
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: APP_CONFIG_Cache__Endpoint
            - name: APP_CONFIG_DistributedTracing__IsEnabled
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: APP_CONFIG_DistributedTracing__IsEnabled
            - name: APP_CONFIG_DistributedTracing__Jaeger__Host
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: APP_CONFIG_DistributedTracing__Jaeger__Host
            - name: APP_CONFIG_DistributedTracing__Jaeger__Port
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: APP_CONFIG_DistributedTracing__Jaeger__Port
            - name: Serilog__WriteTo__0__Args__configure__1__Name
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: Serilog__WriteTo__0__Args__configure__1__Name
            - name: Serilog__WriteTo__0__Args__configure__1__Args__serverUrl
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: Serilog__WriteTo__0__Args__configure__1__Args__serverUrl
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: ASPNETCORE_ENVIRONMENT
            - name: APP_CONFIG_Database__ConnectionString
              valueFrom:
                configMapKeyRef:
                  name: taxi-service-exp-configmap
                  key: APP_CONFIG_Database__ConnectionString

---
apiVersion: v1
kind: Service
metadata:
  name: taxi-service-exp-service
  namespace: taxi-service-exp-application
spec:
  type: NodePort
  selector:
    app: taxi-service-exp
    version: "1.0"
  ports:
    - name: taxi-service-exp-service-port
      protocol: TCP
      port: 8084
      targetPort: 8080

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-horizontalpodautoscaler
  namespace: taxi-service-exp-application
spec:
  minReplicas: 2
  maxReplicas: 30
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: taxi-service-exp-deployment
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 10
    scaleUp:
      stabilizationWindowSeconds: 30
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 30
    # - type: Resource
    #   resource:
    #     name: memory
    #     target:
    #       type: Utilization
    #       averageUtilization: 70

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stock-ingress
  namespace: taxi-service-exp-application
  annotations:
    #    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  labels:
    name: stock-ingress
spec:
  ingressClassName: public
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: taxi-service-exp-service
                port:
                  number: 8084